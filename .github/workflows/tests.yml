name: Tests

on: [push, pull_request]

jobs:
  build:
    name: "py${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8"]
        os: ["ubuntu-latest"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      # Cache dependencies
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ matrix.os }}-pip-

      # Setup
      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools numpy pybind11
          python -m pip wheel --wheel-dir=~/.cache/pip/exoplanet --find-links=~/.cache/pip/exoplanet -r requirements-test.txt
          python -m pip install -U --find-links=~/.cache/pip/exoplanet -r requirements-test.txt
          python -m pip install -U rebound
          python -m pip install -e .

      - name: Run tests
        run: python -m pytest --cov=exoplanet -vs tests

      # Uploading coverage report
      - name: Upload coverage
        if: success()
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: coveralls
