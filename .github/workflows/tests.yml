name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  tests:
    name: "${{ matrix.pymc-version }} on py${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8"]
        pymc-version: ["pymc3==3.8", "pymc3>=3.9,<3.10"]
        include:
          - python-version: "3.8"
            pymc-version: "https://github.com/pymc-devs/pymc3/archive/master.zip"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/cache@v2
        with:
          path: ~/.theano
          key: ${{ runner.os }}-theano-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-theano-${{ matrix.python-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      # Setup
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install "${{ matrix.pymc-version }}"
          python -m pip install -U -e .[test]
          python -c 'import theano; print(theano.config.__str__(print_doc=False))'

      - name: Run tests
        shell: bash -l {0}
        run: python -m pytest --cov=exoplanet -v tests

      # Uploading coverage report
      - name: Upload coverage
        if: success()
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        shell: bash -l {0}
        run: |
          if [ -z "$COVERALLS_REPO_TOKEN" ]; then
            echo "Skipping on pull requests"
          else
            coveralls
          fi

  build:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"

      - name: Build
        run: |
          python -m pip install -U pip pep517 twine setuptools_scm
          python -m pep517.build .
      - name: Test the sdist
        run: |
          python -m venv venv-sdist
          venv-sdist/bin/python -m pip install dist/exoplanet*.tar.gz
          venv-sdist/bin/python -c "import exoplanet;print(exoplanet.__version__)"
      - name: Test the wheel
        run: |
          python -m venv venv-wheel
          venv-wheel/bin/python -m pip install dist/exoplanet*.whl
          venv-wheel/bin/python -c "import exoplanet;print(exoplanet.__version__)"
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*

  upload_pypi:
    needs: [tests, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
