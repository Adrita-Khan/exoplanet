name: Windows

push:
  branches:
    - master
pull_request:
  branches:
    - master

jobs:
  build:
    name: "py${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7"]
        os: ["windows-latest"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      # Cache dependencies
      - uses: actions/cache@v1
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ matrix.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ matrix.os }}-pip-

      # Setup
      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools numpy pybind11 wheel
          python -m pip wheel --wheel-dir=~\AppData\Local\pip\Cache\exoplanet --find-links=~\AppData\Local\pip\Cache\exoplanet .[test]
          python -m pip install -U --find-links=~\AppData\Local\pip\Cache\exoplanet -e .[test]

      # Running tests
      - name: Run tests
        env:
          THEANO_FLAGS: mode=FAST_COMPILE
          MKL_THREADING_LAYER: GNU
          MKL_NUM_THREADS: 1
          OMP_NUM_THREADS: 1
        run: |
          python -c 'import theano; print(theano.config.__str__(print_doc=False))'
          python -m pytest -v tests
